generator client {
  provider = "prisma-client-js"
  output   = "src//generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ChatMessage {
  id        String              @id @default(uuid()) @db.Uuid
  role      ChatMessageRoleEnum @default(user)
  content   String
  createdAt DateTime            @default(now()) @map("created_at")
  chatId    String              @map("chat_id") @db.Uuid
  chat      Chat                @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("chat_messages")
}

model Chat {
  id           String        @id @default(uuid()) @db.Uuid
  title        String        @db.VarChar(64)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  chatMessages ChatMessage[]
  userId       String        @map("user_id") @db.Uuid
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("chats")
}

enum ChatMessageRoleEnum {
  user
  assistant
  system

  @@map("chat_message_role_enum")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique @db.VarChar(255)
  firstName String   @map("first_name") @db.VarChar(64)
  lastName  String   @map("last_name") @db.VarChar(64)
  password  String   @db.VarChar(128)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  chats     Chat[]

  @@map("users")
}
